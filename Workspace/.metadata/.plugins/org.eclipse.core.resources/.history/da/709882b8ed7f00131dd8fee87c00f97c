import java.awt.Point;
import java.util.ArrayList;


public class Week11Problem6 {

	public static int[] getPath(int[][] board) {
		return getPath(board, new Point(0, 0), new int[board.length], new int[board.length]);
	}

	public static int[] getPath(int[][] board, Point location, int[] path, int[] maxPath) {
		if (location.y == board.length - 1) {
			int[] nextX;

			if (location.x == 0) {nextX = new int[] {location.x, location.x + 1};}
			else if (location.x == board[0].length - 1) {nextX = new int[] {location.x - 1, location.x};}
			else {nextX = new int[] {location.x - 1, location.x, location.x + 1};}

			for (int x : nextX) {
				path[location.x] = board[x][location.y];
			}

			return null;
		}

		int[] nextX;

		if (location.x == 0) {nextX = new int[] {location.x, location.x + 1};}
		else if (location.x == board[0].length - 1) {nextX = new int[] {location.x - 1, location.x};}
		else {nextX = new int[] {location.x - 1, location.x, location.x + 1};}

		for (int newX : nextX) {
			path[location.x] = board[location.x][location.y ++];
			getPath(board, new Point(newX, location.y ++), path, maxPath);
		}

		return arraySum(path) > arraySum(maxPath) ? path : maxPath;
	}

	public static int arraySum(int[] array) {
		int sum = 0;

		for (int n : array) {
			sum += n;
		}

		return sum;
	}

	public static void main(String[] args){
		int[][] grid = {
				{1, 2, 5, 4, 5},
				{6, 7, 10, 9, 5},
				{11, 12, 13, 14, 5},
				{16, 17, 18, 19, 0},
				{21, 22, 23, 24, 5}
		};

		int[] path = new int[5];
		path[0] = grid[0][0];
		
		path = getPath(grid);

		for (int p : path) {
			System.out.println(p);
		}
	}

}