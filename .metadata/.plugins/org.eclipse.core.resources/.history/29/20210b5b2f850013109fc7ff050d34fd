package week12;

import java.util.Arrays;


public class Week12Problem5 {

	public static void mergeSort(int[] array) {
		if (array.length == 1) {
			return;
		}

		int splitIndex = array.length / 2;

		int[] small1 = new int[splitIndex];
		int[] small2 = new int[array.length - splitIndex];

		for (int i = 0; i < splitIndex; i ++) {
			small1[i] = array[i];
		}

		for (int i = splitIndex; i < array.length; i ++) {
			small2[i - splitIndex] = array[i];
		}

		mergeSort(small1); mergeSort(small2);

		for (int i = 0; i < array.length; i ++) {
			int smallest1 = min(small1);
			int smallest2 = min(small2);
			
			if (smallest1 < smallest2) {
				array[i] = smallest1;
				small1 = Arrays.copyOfRange(small1, 1, small1.length);
			}
			
			else {
				array[i] = smallest2;
				small2 = Arrays.copyOfRange(small2, 1, small2.length);
			}
		}
	}

	public static int min(int... nums) {
		int min = nums[0];
		
		for (int num : nums) {
			min = num < min ? num : min;
		}
		
		return min;
	}
	
	public static void main(String[] args) {
		int[] array = {5, 8, 2, 3, 10, 4, 1, 9, 7, 6};
		mergeSort(array);

		for (int i : array) {
			System.out.print(i + " ");
		}
	}

}
